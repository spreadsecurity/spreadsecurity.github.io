<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spread Security</title>
    <description>© 2016 Spread Security | All Rights Reserved 
</description>
    <link>https://spreadsecurity.github.io//</link>
    <atom:link href="https://spreadsecurity.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 31 Jul 2016 22:21:43 +0200</pubDate>
    <lastBuildDate>Sun, 31 Jul 2016 22:21:43 +0200</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Open source web reconnaissance with Recon-ng</title>
        <description>&lt;p&gt;During a penetration test, a big part of the success in the exploitation phase depends from how good the information gathering was performed. Since this activity, especially when dealing with a huge amount of informations, is time consuming, it is a good idea to rely on tools which make reconnaissance in automated way.&lt;/p&gt;

&lt;p&gt;Recon-ng is an incredibly powerful tool for Open Source Intelligence Gathering (OSINT); actually, it is a reconnaissance framework written in Python built with a Metasploit like usage model (we will see what Metasploit is further on, for now it is enough to know that it is the most famous penetration testing framework).&lt;br /&gt;
&lt;!--more--&gt;
Reconnaissance is considered as the activity of acquiring open source informations, i.e. available on the Internet, about a target in a passive way (passive reconnaissance); conversely, discovery is the activity which permits to acquire informations by sending packets directly to the target (active reconnaissance). Even if Recon-ng is mainly a passive reconnaissance framework, it includes also some elements for discovery and exploitation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since we will use a lot of tools during the next posts, I highly suggest to set up a Virtual Machine with a Penetration Testing distribution installed on.
Personally I use VMware Workstation 12 Player as hypervisor for server and desktop virtualization which is free and can be downloaded from the official website. Regarding operating systems, I use mainly Kali Linux, which is a Debian based distribution. This distro is very useful because it has a pretty good number of tools preinstalled and preconfigured leaving to the user a ready to use PT machine. I will not explain how to set up a VM since you can find a lot of tutorials about that on the web.&lt;/p&gt;

&lt;p&gt;Anyway, you can still download Recon-ng on your favorite Linux distribution from author repository using &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone&lt;/code&gt; and installing required dependencies (this is also an option in Kali Linux in case you want the latest version available).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In Kali Linux, we can start Recon-ng in different ways. One is by navigating in the applications menu by clicking on &lt;em&gt;Applications &amp;gt;  Information Gathering &amp;gt; recon-ng&lt;/em&gt; like shown in the following image:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;/images/recon-ng/recon-ng_start.png&quot;&gt;&lt;img src=&quot;/images/recon-ng/recon-ng_start.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Same thing can be done by clicking on the “Show application” menu:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;/images/recon-ng/recon-ng_start2.png&quot;&gt;&lt;img src=&quot;/images/recon-ng/recon-ng_start2.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another possibility is launching it by simply opening the Terminal and typing &lt;code class=&quot;highlighter-rouge&quot;&gt;recon-ng&lt;/code&gt;. In any case, we are prompted with the framework banner, version and number of modules for each category:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/images/recon-ng/recon-ng_intro.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Modules are the core of the framework and in the current version there are five categories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Recon modules - for reconnaissance activities;&lt;/li&gt;
  &lt;li&gt;Reporting modules - for reporting results on a file;&lt;/li&gt;
  &lt;li&gt;Import modules - for importing values from a file into a database table;&lt;/li&gt;
  &lt;li&gt;Exploitation modules - for explotation activities;&lt;/li&gt;
  &lt;li&gt;Discovery modules - for discovery activities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The good thing is that everyone can implement his own module written in Python and integrate it inside the framework.&lt;br /&gt;
Since we are dealing with information gathering, we will focus on recon modules.&lt;br /&gt;
The framework accepts commands via command line; to have a list of the commands just type &lt;code class=&quot;highlighter-rouge&quot;&gt;help&lt;/code&gt; and press enter:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][default] &amp;gt; help

Commands (type [help|?] &amp;lt;topic&amp;gt;):
---------------------------------
add             Adds records to the database
back            Exits the current context
delete          Deletes records from the database
exit            Exits the framework
help            Displays this menu
keys            Manages framework API keys
load            Loads specified module
pdb             Starts a Python Debugger session
query           Queries the database
record          Records commands to a resource file
reload          Reloads all modules
resource        Executes commands from a resource file
search          Searches available modules
set             Sets module options
shell           Executes shell commands
show            Shows various framework items
snapshots       Manages workspace snapshots
spool           Spools output to a file
unset           Unsets module options
use             Loads specified module
workspaces      Manages workspaces
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To display a list of all available modules for each category we can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;show&lt;/code&gt; command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;show modules
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Since right now we are only interested in recon modules, we can limit the search to them:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][default] &amp;gt; show modules recon

  Recon
  -----
    recon/companies-contacts/bing_linkedin_cache
    recon/companies-contacts/indeed
    recon/companies-contacts/jigsaw/point_usage
    recon/companies-contacts/jigsaw/purchase_contact
    recon/companies-contacts/jigsaw/search_contacts
    recon/companies-contacts/linkedin_auth
    recon/companies-multi/github_miner
    recon/companies-multi/whois_miner
    recon/contacts-contacts/mailtester
    recon/contacts-contacts/mangle
    recon/contacts-contacts/unmangle
    recon/contacts-credentials/hibp_breach
    recon/contacts-credentials/hibp_paste
    recon/contacts-domains/migrate_contacts
    recon/contacts-profiles/fullcontact
    recon/credentials-credentials/adobe
    recon/credentials-credentials/bozocrack
    recon/credentials-credentials/hashes_org
    recon/domains-contacts/metacrawler
    recon/domains-contacts/pgp_search
    recon/domains-contacts/whois_pocs
    recon/domains-credentials/pwnedlist/account_creds
    recon/domains-credentials/pwnedlist/api_usage
    recon/domains-credentials/pwnedlist/domain_creds
    recon/domains-credentials/pwnedlist/domain_ispwned
    recon/domains-credentials/pwnedlist/leak_lookup
    recon/domains-credentials/pwnedlist/leaks_dump
    recon/domains-domains/brute_suffix
    recon/domains-hosts/bing_domain_api
    recon/domains-hosts/bing_domain_web
    recon/domains-hosts/brute_hosts
    recon/domains-hosts/builtwith
    recon/domains-hosts/google_site_api
    recon/domains-hosts/google_site_web
    ...................................

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The structure for each module is the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module-category/data-conversion/module-name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Consider, for example, &lt;code class=&quot;highlighter-rouge&quot;&gt;recon/domains-hosts/google_site_web&lt;/code&gt;: this performs a recon activity using Google Search Engine to convert an information about a domain into data about hosts of that domain. Keep in mind that certain modules require valid API key to run; some keys can be acquired by simply registering on the related website.&lt;br /&gt;
To select a module we need the &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt; command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;use recon/domains-hosts/google_site_web
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once the module is selected we can show informations about it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][default][google_site_web] &amp;gt; show info

      Name: Google Hostname Enumerator
      Path: modules/recon/domains-hosts/google_site_web.py
    Author: Tim Tomes (@LaNMaSteR53)

Description:
  Harvests hosts from Google.com by using the &#39;site&#39; search operator. Updates the &#39;hosts&#39; table with
  the results.

Options:
  Name    Current Value  Required  Description
  ------  -------------  --------  -----------
  SOURCE  default        yes       source of input (see &#39;show info&#39; for details)

Source Options:
  default        SELECT DISTINCT domain FROM domains WHERE domain IS NOT NULL
  &amp;lt;string&amp;gt;       string representing a single input
  &amp;lt;path&amp;gt;         path to a file containing a list of inputs
  query &amp;lt;sql&amp;gt;    database query returning one column of inputs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this way we can read the description and take a look at the options we can set before running the recon activity. As you can see, the action performed by this module is pretty the same as the one explained in the article &lt;a href=&quot;https://spreadsecurity.github.io/2016/07/18/information-gathering-with-google-search-engine.html&quot; target=&quot;_blank&quot;&gt;Information gathering with Google Search Engine&lt;/a&gt;, but this time it is done in an automated way.&lt;br /&gt;
In case we want to analyze module source code we can either use &lt;code class=&quot;highlighter-rouge&quot;&gt;show source&lt;/code&gt; or navigate to &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/share/recon-ng/modules/recon/domains-hosts&lt;/code&gt; where the python file &lt;code class=&quot;highlighter-rouge&quot;&gt;google_site_web.py&lt;/code&gt; is located (note that folders structure reflects modules categories and data conversions).&lt;br /&gt;
Once all required options are set up through &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; command, the module can be executed with &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We will see now an example of reconnaissance activity performed on the National Institute of Standards and Technology (NIST) domain.&lt;br /&gt;
Before starting, we need to introduce the concept of workspace: Recon-ng allows to define a workspace for each target subject of reconnaissance; by doing this, it will create a database containing all gathered informations about the target itself. This is the reason why in the “framework help” shown before there is the &lt;code class=&quot;highlighter-rouge&quot;&gt;query&lt;/code&gt; command, which allows to examine the DB using Standard Query Language (SQL), and also why import modules are present.&lt;/p&gt;

&lt;p&gt;We start by creating a new workspace:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;workspaces add NIST
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After that, the command line shows the change from the default workspace to the new one.
Then we need to associate a domain with the created workspace and finally we can check that everything is set up correctly by listing domains with &lt;code class=&quot;highlighter-rouge&quot;&gt;show&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][default] &amp;gt; workspaces add NIST
[recon-ng][NIST] &amp;gt; add domains nist.gov
[recon-ng][NIST] &amp;gt; show domains

  +---------------------------------+
  | rowid |  domain  |    module    |
  +---------------------------------+
  | 1     | nist.gov | user_defined |
  +---------------------------------+

[*] 1 rows returned
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Same result can be obtained with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST] &amp;gt; query select * from domains
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This can be checked also by querying the database with an external tool; the DB is located in the following folder:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/.recon-ng/workspaces/NIST
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here there is a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;data.db&lt;/code&gt; which is the database for NIST workspace; to explore the DB we can use the tool &lt;code class=&quot;highlighter-rouge&quot;&gt;sqlite3&lt;/code&gt; already installed in Kali Linux:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@kali:~/.recon-ng/workspaces/NIST# sqlite3 data.db 
SQLite version 3.13.0 2016-05-18 10:57:30
Enter &quot;.help&quot; for usage hints.
sqlite&amp;gt; select * from domains;
nist.gov|user_defined
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To exit from the program, just type &lt;code class=&quot;highlighter-rouge&quot;&gt;.exit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can also add a company name:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST] &amp;gt; add companies
company (TEXT): NIST
description (TEXT): National Institute of Standards and Technology
[recon-ng][NIST] &amp;gt; show companies

  +---------------------------------------------------------------------------------+
  | rowid | company |                  description                   |    module    |
  +---------------------------------------------------------------------------------+
  | 1     | NIST    | National Institute of Standards and Technology | user_defined |
  +---------------------------------------------------------------------------------+

[*] 1 rows returned
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Adding domains and companies is the initial step because they are inputs used by modules to perform information gathering. To check all modules using these two informations as a starting point we can leverage the &lt;code class=&quot;highlighter-rouge&quot;&gt;search&lt;/code&gt; command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST] &amp;gt; search domains-
[*] Searching for &#39;domains-&#39;...

  Recon
  -----
    recon/domains-contacts/metacrawler
    recon/domains-contacts/pgp_search
    recon/domains-contacts/whois_pocs
    recon/domains-credentials/pwnedlist/account_creds
    recon/domains-credentials/pwnedlist/api_usage
    recon/domains-credentials/pwnedlist/domain_creds
    recon/domains-credentials/pwnedlist/domain_ispwned
    recon/domains-credentials/pwnedlist/leak_lookup
    recon/domains-credentials/pwnedlist/leaks_dump
    recon/domains-domains/brute_suffix
    recon/domains-hosts/bing_domain_api
    recon/domains-hosts/bing_domain_web
    recon/domains-hosts/brute_hosts
    recon/domains-hosts/builtwith
    recon/domains-hosts/google_site_api
    recon/domains-hosts/google_site_web
    recon/domains-hosts/hackertarget
    recon/domains-hosts/netcraft
    recon/domains-hosts/shodan_hostname
    recon/domains-hosts/ssl_san
    recon/domains-hosts/vpnhunter
    recon/domains-vulnerabilities/ghdb
    recon/domains-vulnerabilities/punkspider
    recon/domains-vulnerabilities/xssed
    recon/domains-vulnerabilities/xssposed

[recon-ng][NIST] &amp;gt; search companies-
[*] Searching for &#39;companies-&#39;...

  Recon
  -----
    recon/companies-contacts/bing_linkedin_cache
    recon/companies-contacts/indeed
    recon/companies-contacts/jigsaw/point_usage
    recon/companies-contacts/jigsaw/purchase_contact
    recon/companies-contacts/jigsaw/search_contacts
    recon/companies-contacts/linkedin_auth
    recon/companies-multi/github_miner
    recon/companies-multi/whois_miner

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Suppose we want to start populating our DB with hostnames related to &lt;em&gt;nist.gov&lt;/em&gt; domain usign &lt;code class=&quot;highlighter-rouge&quot;&gt;google_site_web&lt;/code&gt; module seen before; to check parameters required to run it we can display module options:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST][google_site_web] &amp;gt; show options

  Name    Current Value  Required  Description
  ------  -------------  --------  -----------
  SOURCE  default        yes       source of input (see &#39;show info&#39; for details)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Since we have already set the domain, the “Current Value” which says “default” is taken directly from the DB. Then, we can just run the module and after a little while we get the results:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST][google_site_web] &amp;gt; run

--------
NIST.GOV
--------
[*] Searching Google for: site:nist.gov
[*] [host] www.nsrl.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] gams.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] physics.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] face.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] scap.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] patapsco.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] nvd.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] kinetics.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] srdata.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] www.cftt.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] cccbdb.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] museum.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] thermosymposium.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] www.atp.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] www.ctcms.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] usgcb.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] www.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] trecvid.nist.gov (&amp;lt;blank&amp;gt;)
[*] [host] stonewall.nist.gov (&amp;lt;blank&amp;gt;)
.......................................
-------
SUMMARY
-------
[*] 73 total (73 new) hosts found.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this case we discovered 73 hosts related to the domain; we can show the list of discovered host:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST][google_site_web] &amp;gt; show hosts

  +-----------------------------------------------------------------------------------------------------------------+
  | rowid |              host              | ip_address | region | country | latitude | longitude |      module     |
  +-----------------------------------------------------------------------------------------------------------------+
  | 1     | www.nsrl.nist.gov              |            |        |         |          |           | google_site_web |
  | 2     | gams.nist.gov                  |            |        |         |          |           | google_site_web |
  | 3     | physics.nist.gov               |            |        |         |          |           | google_site_web |
  | 4     | face.nist.gov                  |            |        |         |          |           | google_site_web |
  | 5     | scap.nist.gov                  |            |        |         |          |           | google_site_web |
  | 6     | patapsco.nist.gov              |            |        |         |          |           | google_site_web |
  | 7     | nvd.nist.gov                   |            |        |         |          |           | google_site_web |
  | 8     | kinetics.nist.gov              |            |        |         |          |           | google_site_web |
  | 9     | srdata.nist.gov                |            |        |         |          |           | google_site_web |
  | 10    | www.cftt.nist.gov              |            |        |         |          |           | google_site_web |
  | 11    | cccbdb.nist.gov                |            |        |         |          |           | google_site_web |
  | 12    | museum.nist.gov                |            |        |         |          |           | google_site_web |
  | 13    | thermosymposium.nist.gov       |            |        |         |          |           | google_site_web |
  | 14    | www.atp.nist.gov               |            |        |         |          |           | google_site_web |
  | 15    | www.ctcms.nist.gov             |            |        |         |          |           | google_site_web |
  | 16    | usgcb.nist.gov                 |            |        |         |          |           | google_site_web |
  | 17    | www.nist.gov                   |            |        |         |          |           | google_site_web |
  | 18    | trecvid.nist.gov               |            |        |         |          |           | google_site_web |
  | 19    | stonewall.nist.gov             |            |        |         |          |           | google_site_web |
.....................................................................................................................
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As the table shows, we have empty columns ready to store additional informations for each host: these can be populated by hand or by running other modules using host informations we just gathered:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST][google_site_web] &amp;gt; search hosts-
[*] Searching for &#39;hosts-&#39;...

  Recon
  -----
    recon/hosts-domains/migrate_hosts
    recon/hosts-hosts/bing_ip
    recon/hosts-hosts/freegeoip
    recon/hosts-hosts/ipinfodb
    recon/hosts-hosts/resolve
    recon/hosts-hosts/reverse_resolve
    recon/hosts-hosts/ssltools
    recon/hosts-locations/migrate_hosts
    recon/hosts-ports/shodan_ip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We can find IP addresses for each host by running &lt;code class=&quot;highlighter-rouge&quot;&gt;recon/hosts-hosts/resolve&lt;/code&gt; module, while the geolocation can be acquired with &lt;code class=&quot;highlighter-rouge&quot;&gt;recon/hosts-hosts/freegeoip&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST][freegeoip] &amp;gt; show hosts 

  +------------------------------------------------------------------------------------------------------------------------------------------+
  | rowid |              host              |   ip_address  |         region         |    country    | latitude | longitude |      module     |
  +------------------------------------------------------------------------------------------------------------------------------------------+
  | 1     | www.nsrl.nist.gov              | 129.6.24.57   | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 2     | gams.nist.gov                  | 129.6.24.27   | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 3     | physics.nist.gov               | 129.6.13.152  | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 4     | face.nist.gov                  | 132.163.4.217 | Boulder, Colorado      | United States | 39.9668  | -105.2092 | google_site_web |
  | 5     | scap.nist.gov                  | 129.6.13.177  | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 6     | patapsco.nist.gov              | 129.6.13.93   | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 7     | nvd.nist.gov                   | 129.6.13.177  | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 8     | kinetics.nist.gov              | 129.6.24.48   | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 9     | srdata.nist.gov                | 129.6.13.111  | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 10    | www.cftt.nist.gov              | 129.6.24.57   | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 11    | cccbdb.nist.gov                | 129.6.13.59   | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 12    | museum.nist.gov                | 129.6.13.111  | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 13    | thermosymposium.nist.gov       | 132.163.4.124 | Boulder, Colorado      | United States | 39.9668  | -105.2092 | google_site_web |
  | 14    | www.atp.nist.gov               | 132.163.4.217 | Boulder, Colorado      | United States | 39.9668  | -105.2092 | google_site_web |
  | 15    | www.ctcms.nist.gov             | 129.6.24.51   | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 16    | usgcb.nist.gov                 | 129.6.13.177  | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
  | 17    | www.nist.gov                   | 132.163.4.18  | Boulder, Colorado      | United States | 39.9668  | -105.2092 | google_site_web |
  | 18    | trecvid.nist.gov               | 132.163.4.217 | Boulder, Colorado      | United States | 39.9668  | -105.2092 | google_site_web |
  | 19    | stonewall.nist.gov             | 129.6.13.93   | Gaithersburg, Maryland | United States | 39.1403  | -77.222   | google_site_web |
..............................................................................................................................................
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As shown, in minutes we have acquired tons of informations about target hosts.&lt;br /&gt;
Now we can lower the search level by digging even deeper: what about looking for contact informations such as names and email addresses?
We can achieve this objective by running &lt;code class=&quot;highlighter-rouge&quot;&gt;recon/domains-contacts/pgp_search&lt;/code&gt;: in fact as the description reports, this module searches the MIT public PGP key server for email addresses of the given domain. After module has been executed, we can display results stored in the DB (of course names and addresses in the following table are fictional for privacy reasons):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST][pgp_search] &amp;gt; show contacts

  +----------------------------------------------------------------------------------------------------------------------------------------------+
  | rowid |   first_name  | middle_name |    last_name     |             email             |        title        | region | country |   module   |
  +----------------------------------------------------------------------------------------------------------------------------------------------+
  | 1     | Bugs          |             | Bunny            | bugs.bunny@nist.gov           | PGP key association |        |         | pgp_search |
  | 2     | Foghorn       |             | Leghorn          | foghorn.leghorn@nist.gov      | PGP key association |        |         | pgp_search |
  | 3     | Daffy         |             | Duck             | daffy.duck@nist.gov           | PGP key association |        |         | pgp_search |

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is not over yet: we can also search if those contacts have been involved in a databreach, like Adobe one in 2013. For this purpose there are two interesting modules, &lt;code class=&quot;highlighter-rouge&quot;&gt;recon/contacts-credentials/hibp_breach&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;recon/contacts-credentials/hibp_paste&lt;/code&gt;: the first one leverages haveibeenpwned.com API to determine if email addresses are associated with breached credentials, while the other one uses the API to determine if email addresses have been published to various paste sites.&lt;/p&gt;

&lt;p&gt;You can check if your email address has been compromised in data breaches by simply going on the &lt;em&gt;Have I Been Pwned?&lt;/em&gt; (HIBP) website and launching a search. This service collects and analyzes database dumps and pastes leaked by data breaches happened over the years regarding millions of accounts.&lt;/p&gt;

&lt;p&gt;All these informations can be useful during next phases of the attack, especially for Social Engineering (we will look into this technique in future articles).&lt;/p&gt;

&lt;p&gt;Once collected enough informations, it is useful to report them in a document. Fortunately, Recon-ng offers modules to report results in different formats:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST] &amp;gt; show modules reporting

  Reporting
  ---------
    reporting/csv
    reporting/html
    reporting/json
    reporting/list
    reporting/pushpin
    reporting/xlsx
    reporting/xml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;For example, we can choose to save the returns in an HTML page file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[recon-ng][NIST] &amp;gt; use reporting/html
[recon-ng][NIST][html] &amp;gt; show options

  Name      Current Value                                 Required  Description
  --------  -------------                                 --------  -----------
  CREATOR                                                 yes       creator name for the report footer
  CUSTOMER                                                yes       customer name for the report header
  FILENAME  /root/.recon-ng/workspaces/NIST/results.html  yes       path and filename for report output
  SANITIZE  True                                          yes       mask sensitive data in the report

[recon-ng][NIST][html] &amp;gt; set CREATOR Spread Security
CREATOR =&amp;gt; Spread Security
[recon-ng][NIST][html] &amp;gt; set CUSTOMER NIST
CUSTOMER =&amp;gt; NIST
[recon-ng][NIST][html] &amp;gt; run
[*] Report generated at &#39;/root/.recon-ng/workspaces/NIST/results.html&#39;.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Results can be then visualized using a common web browser:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;/images/recon-ng/recon-ng_report.png&quot;&gt;&lt;img src=&quot;/images/recon-ng/recon-ng_report.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see Recon-ng is a valuable framework for information gathering and we have seen only a small part of its real capabilities, so take your time to explore and experiment with it to take advantage of its real capabilities.&lt;/p&gt;
</description>
        <pubDate>Sun, 31 Jul 2016 00:00:00 +0200</pubDate>
        <link>https://spreadsecurity.github.io//2016/07/31/open-source-web-reconnaissance-with-recon-ng.html</link>
        <guid isPermaLink="true">https://spreadsecurity.github.io//2016/07/31/open-source-web-reconnaissance-with-recon-ng.html</guid>
        
        <category>Information gathering</category>
        
        <category>OSINT</category>
        
        <category>Recon-ng</category>
        
        
      </item>
    
      <item>
        <title>Information gathering with Shodan</title>
        <description>&lt;p&gt;Today a large number of devices are connected to Internet, from smartphones or watches to air-conditioning devices or even refrigerators: this is what has been called “Internet of Things” (IoT), i.e. the network composed by physical devices collecting and exchanging data between themselves.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/images/shodan/IoT.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Of course, a wrong configuration of these devices can generate serious problems in terms of privacy.&lt;br /&gt;
The simplest example is given by private webcams, or better what they are intended to be: in fact, if they are set to have a public IP address and have not been secured properly, they can be accessed from anywhere in the world by anyone.&lt;br /&gt;
Moreover, even if configured to request login credentials, many of them still have default access values, which can be easily acquired by reading user manual.&lt;br /&gt;
Generally, depending from the webcam model, the web control interface has a default page title and a defined pattern in the url used for browser access (the only difference will be the IP address). So, once we know the title or the url pattern for a specific model, we can generate a Google query to search all the devices of that type exposed on the Internet with the same technique used in the previous article.&lt;br /&gt;
An example is given by this simple query which exploits the web console interface title:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;intitle:&quot;Live View / - AXIS&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this way we can find all webcams from AXIS manufacturer with a public IP address indexed by Google.&lt;/p&gt;

&lt;p&gt;However, there is a really powerful search engine for the IoT called &lt;em&gt;Shodan&lt;/em&gt; that makes all the hard work for us: https://www.shodan.io&lt;/p&gt;

&lt;p&gt;&lt;b&gt;The search engine for the Internet of Things&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;The description in the website says that Shodan is the world’s first search engine for Internet-connected devices:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/images/shodan/shodan.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here it is possible to look for industrial control systems, databases, video games servers, routers, webcams, refrigerators and so on; in fact, mainly using banner grabbing technique by interrogating ports, Shodan is able to discover a lot of informations about publicly exposed devices. This is the big difference between Google and Shodan: while the first one crawls for data on web pages, the latter probes for ports and captures resulting banners.&lt;/p&gt;

&lt;p&gt;We can either use directly the search form or use the Explore button for a guided search through the available categories using predefined queries.
I highly suggest to register to the site in order to gain access to features like &lt;em&gt;filters&lt;/em&gt; and &lt;em&gt;reports&lt;/em&gt; (including the API key).&lt;/p&gt;

&lt;p&gt;Suppose we want to search for AXIS devices, we compile the search form and launch the query:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;/images/shodan/axis.png&quot;&gt;&lt;img src=&quot;/images/shodan/axis.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above image shows the results page; on the left side of the screen we have five interesting groups (they change depending on the query):&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Top countries;&lt;/li&gt;
	&lt;li&gt;Top services;&lt;/li&gt;
	&lt;li&gt;Top organizations;&lt;/li&gt;
	&lt;li&gt;Top operating systems;&lt;/li&gt;
	&lt;li&gt;Top products.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of them reports the top five; for example, the first one shows the top five countries having the major number of devices of that type.
On the right side, each result is reported with the corresponding device IP address (which I have partially blacked out for privacy reasons) and the &lt;em&gt;body text area&lt;/em&gt; which represents device response. By clicking on a device a new page opens up with more detailed informations, including a map showing the geolocation using Mapbox API (omitted in the next image).&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;/images/shodan/axis_detail.png&quot;&gt;&lt;img src=&quot;/images/shodan/axis_detail.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Moreover, it is possible to generate reports by clicking on “Create Report”:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;/images/shodan/top_countries.png&quot;&gt;&lt;img src=&quot;/images/shodan/top_countries.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/images/shodan/top_services.png&quot;&gt;&lt;img src=&quot;/images/shodan/top_services.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/images/shodan/top_organizations.png&quot;&gt;&lt;img src=&quot;/images/shodan/top_organizations.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/images/shodan/top_products.png&quot;&gt;&lt;img src=&quot;/images/shodan/top_products.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/images/shodan/top_versions.png&quot;&gt;&lt;img src=&quot;/images/shodan/top_versions.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/images/shodan/top_domains.png&quot;&gt;&lt;img src=&quot;/images/shodan/top_domains.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/images/shodan/ssl_versions.png&quot;&gt;&lt;img src=&quot;/images/shodan/ssl_versions.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/images/shodan/ssl_chain_lenght.png&quot;&gt;&lt;img src=&quot;/images/shodan/ssl_chain_lenght.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/images/shodan/top_operating_systems.png&quot;&gt;&lt;img src=&quot;/images/shodan/top_operating_systems.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The other important feature is represented by filters; they are really useful to improve the search, just like we saw for Google advanced search operators. Some of them are reported next:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;country - filters by two letters country code (e.g. US, JP, FR, IT, RU);&lt;/li&gt;
	&lt;li&gt;city - filters by city name;&lt;/li&gt;
	&lt;li&gt;hostname - filters by hostname or domain;&lt;/li&gt;
	&lt;li&gt;net - filters by IP range (CIDR notation);&lt;/li&gt;
	&lt;li&gt;product - filters by technology (es. MySQL, Apache, IIS, Nginx);&lt;/li&gt;
	&lt;li&gt;os - filters by operating system;&lt;/li&gt;
	&lt;li&gt;port - filters by specific port;&lt;/li&gt;
	&lt;li&gt;org - filters by organization;&lt;/li&gt;
	&lt;li&gt;geo - filters by geographic coordinates;&lt;/li&gt;
	&lt;li&gt;after/before - filters by date (format dd/mm/yyyy and dd-mm-yy).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The application of filters can be done by clicking on the items on the left contained in the top five groups seen before or manually in the search form by specifying the query in this way (example search for SSH port):&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;port:22
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Remember that making a search without filters, it is equivalent to tell to the engine to look for the requested information in the body text area.&lt;/p&gt;

&lt;p&gt;If we want to find all MySQL servers in USA, the query will be:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;product:&quot;MySQL&quot; country:&quot;US&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On the left side of the results page we get two interesting groups: top operating systems and top versions.&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;/images/shodan/mysql_us.png&quot;&gt;&lt;img src=&quot;/images/shodan/mysql_us.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They can be used to apply other two filters; for example, we can choose to search for old Windows XP operating systems (!) and then 5.1.71-community version of MySQL (this version appears on the left after filtering by O.S.):&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;country:&quot;US&quot; product:&quot;MySQL&quot; os:&quot;Windows XP&quot; version:&quot;5.1.71-community&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There is also an interesting application, available at https://maps.shodan.io, through which we can even look at a map with pinpoints indicating the geolocation of devices, in this case public MySQL servers in USA:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;/images/shodan/shodan_maps.png&quot;&gt;&lt;img src=&quot;/images/shodan/shodan_maps.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In terms of Industrial Control Systems (ICS), Shodan has also a pretty nice informative animated graph called Shodan ICS Radar showing a worldwide display of ICS accessible via web:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;a href=&quot;/images/shodan/ics_radar.png&quot;&gt;&lt;img src=&quot;/images/shodan/ics_radar.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I suggest to experiment with filters of all types to get familiar with queries and take advantage of the full potential of this search engine. Shodan can be a very useful tool to verify if a company network has critical nodes publicly exposed or not properly configured.&lt;/p&gt;

&lt;p&gt;Bonus query:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;has_screenshot:true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 25 Jul 2016 00:00:00 +0200</pubDate>
        <link>https://spreadsecurity.github.io//2016/07/25/information-gathering-with-shodan.html</link>
        <guid isPermaLink="true">https://spreadsecurity.github.io//2016/07/25/information-gathering-with-shodan.html</guid>
        
        <category>Information gathering</category>
        
        <category>Shodan</category>
        
        <category>IoT</category>
        
        <category>OSINT</category>
        
        
      </item>
    
      <item>
        <title>Information gathering with Google Search Engine</title>
        <description>&lt;p&gt;Generally, when we want to search for a particular argument, we open up our favourite browser, navigate to a Web Search Engine and type in some words related to that matter. Depending from how good we set up the research, we obtain more or less pertinent results.&lt;/p&gt;

&lt;p&gt;Basically, everytime we launch a search we make a query to the web search engine: there are some particular expressions known to the engine, called Advanced Search Operators, which make a search more effective. Queries built like these are also called “Google dorks”.&lt;br /&gt;
&lt;!--more--&gt;
For example, we can make a simple search for “cyber security” using Google Search Engine:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/images/google_search/google_search.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By doing this we obtain a good amount of informations about the argument; note that we could achieve the same result by using the following url instead of compiling the search form:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://www.google.com/search?q=cyber+security
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Google Advanced Search Operators and Special Search Characters&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;What if we want to do a more specific query, like obtaining all the results for that topic from a particular website? Here come advanced search operators.
Suppose we want to analyze results coming from NIST (National Institute of Standards and Technology) for that topic; then the query should be:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;site:nist.gov &quot;cyber security&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The operator “site:” asks to the engine to show all the results associated to the website (which represent the argument of the operator) reported after the colon symbol; beware that there must be no space between the colon symbol and the argument of the operator.
In addition to search operators, there are special search characters like the double quotes used before to search phrases or terms composed by more than one word.&lt;/p&gt;

&lt;p&gt;A pretty good list of Google advanced search operators is this one from DEFCON 2005 Conference:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/images/google_search/google_search_operators.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;List for special search characters:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;( + ) force inclusion of something common;&lt;/li&gt;
  &lt;li&gt;( - ) exclude a search term;&lt;/li&gt;
  &lt;li&gt;( &quot; ) use quotes around search phrases;&lt;/li&gt;
  &lt;li&gt;( . ) a single-character wildcard;&lt;/li&gt;
  &lt;li&gt;( * ) any word;&lt;/li&gt;
  &lt;li&gt;( &amp;amp; ) boolean &#39;AND&#39;;&lt;/li&gt;
  &lt;li&gt;( | ) boolean &#39;OR&#39;;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The special char “-“ is really interesting for listing subdomains. Considering the next query we obtain a list of the subdomains of nist.gov:&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/images/google_search/nist_search.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Adding more “-“ condition allows to crawl even deeper: keep in mind that Google ranks the results, so the most searched stuff lies at the top, i.e. in the first pages, while the most interesting informations (from an attacker point of view) can be found at the bottom.&lt;/p&gt;

&lt;p&gt;Now we will look for something more interesting in terms of confidential informations; suppose we want to know if in a certain website there is a PDF document containing the word “password”. For this purpose, we query Google with the following request:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;site:www.nameoftargetsite.com filetype:pdf intext:password
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The meaning of the previous line is explained next: the first operator is well known; the “filetype:” directive tells Google we want to search all the files with a particular extension, in this case PDF. Lastly, we add a third condition which makes the engine search for a specific word in the text.
So, interpreting the whole query: we are asking to search through the site www.nameoftargetsite.com all PDF documents containing the word “password”.&lt;/p&gt;

&lt;p&gt;You can easily see how powerful this syntax is and you will be surprised by discovering the amount of confidential informations left to public access.
This is why it is important to configure properly the access to informations hosted on the net, for example in a website. However, if not really needed, it is a good practice to avoid hosting of confidential documents on websites, since they are the first contact point for attackers.&lt;/p&gt;

&lt;p&gt;If you want to take a look at a really good list of Google dorks I suggest you to visit the following website:
https://www.exploit-db.com/google-hacking-database&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;/images/google_search/ghdb.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here you can search through the Google Hacking DataBase choosing the query category you are interested in and then simply use it to search through Google.
Keep in mind that this type of information gathering through search engine is a passive reconnaissance activity since we are not interacting directly with the systems; this helps to maintain a low profile making hard to be detected.&lt;/p&gt;

&lt;p&gt;All these search activities can be executed by using automatic tools, which leverage not only Google, but a huge variety of search engines and social network platforms; we will take a look at some of them in the next posts.&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Jul 2016 00:00:00 +0200</pubDate>
        <link>https://spreadsecurity.github.io//2016/07/18/information-gathering-with-google-search-engine.html</link>
        <guid isPermaLink="true">https://spreadsecurity.github.io//2016/07/18/information-gathering-with-google-search-engine.html</guid>
        
        <category>Information gathering</category>
        
        <category>Google advanced search operators</category>
        
        <category>OSINT</category>
        
        
      </item>
    
      <item>
        <title>Main Steps of an Attack</title>
        <description>&lt;p&gt;Following a portion of the phases presented in the Penetration Testing Execution Standards (PTES), which represents a technical guideline for performing a penetration test, i.e. a simulation of a real attack against a certain target, we will focus on the theory and practice behind the following main steps:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Information gathering or reconnaissance;&lt;/li&gt;
  &lt;li&gt;Vulnerability analysis;&lt;/li&gt;
  &lt;li&gt;Exploitation;&lt;/li&gt;
  &lt;li&gt;Post-exploitation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since these steps mimic how the attacker thinks and acts, performing this process via previous authorization is also called “Ethical Hacking”.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/main_phases.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Information gathering&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;There is a huge amount of informations we can acquire about a certain target by simply crawling the Internet using proper searches and tools, namely &lt;i&gt;passive reconnaissance&lt;/i&gt;; this type of information gathering is really safe for the attacker: in fact, since it does not interact directly with the systems because it uses only web search engines, it is difficult to detect.&lt;/p&gt;

&lt;p&gt;Understanding how it is important to limit the visibility of our personal informations is a first important step in the road to security. Many times users are the same ones giving the attackers a huge help by simply leaving personal data publicly available on the net.&lt;/p&gt;

&lt;p&gt;On the other side, &lt;i&gt;active reconnaissance&lt;/i&gt; is more invasive and can trigger alerts on Intrusion Detection Systems (IDS), but gives a lot more specific informations such as version of operating system and applications running on target machine, services and open ports.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Vulnerability Analysis&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Once we have collected enough informations about the target, we can start analyzing vulnerabilities, i.e. security flaws in target systems. Even if understanding how to find vulnerabilities by ourselves is important (especially in a security research perspective), sometimes it can be useful to take advantage of automatic tools for scanning a certain system in order to find known security issues, especially if the time available to discover them is limited. This is why we will look at some useful tools called Vulnerability Scanners: they namely scan the target, mostly in a invasive way, to check if there are known vulnerabilities or software misconfigurations; by probing hosts, scanners look for active addresses, open ports, operative systems, running applications versions and so on.&lt;br /&gt;
Finally they report results in a document.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Exploitation&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Finding a vulnerability does not necessarily mean we can exploit it to compromise systems or accounts: this is where the art of exploitation takes place and where the attacker shows his knowledge, capability and creativity.&lt;/p&gt;

&lt;p&gt;We will go from Web Application testing (such as SQL Injection, Cross-Site Scripting, Local/Remote File Inclusion) to Client-side exploitation taking advantage of vulnerabilities in the software installed on target machines in order to compromise them by taking the control.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Post-exploitation&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Once the access to the system is obtained, the attacker can start the real intrusion: in fact, this is where the concrete attack starts. Generally, one of the first things to do is to try to escalate privileges, i.e. getting full access to all folders and files on the system so as to exfiltrate as much data as possible. Furthermore the attacker may want to be able to reconnect back to the compromised system whenever he wants to, so another post-exploitation activity could be the implemetation of the so called “persistence”.
Moreover, if the compromised system is connected to other systems it is possible to leverage this feature to get access to other devices connected to the same network interface subnet.&lt;/p&gt;

&lt;p&gt;This is just a high-level view of how an attacker plans and executes an attack; we will perform in detail these steps in a virtual laboratory environment on intentionally vulnerable machines created for didactic purpose.&lt;/p&gt;

&lt;p&gt;In the next articles, we will discuss about topics regarding these four macro-phases.&lt;/p&gt;

&lt;p&gt;References: &lt;i&gt;http://www.pentest-standard.org&lt;/i&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Jul 2016 00:00:00 +0200</pubDate>
        <link>https://spreadsecurity.github.io//2016/07/11/main-steps-of-an-attack.html</link>
        <guid isPermaLink="true">https://spreadsecurity.github.io//2016/07/11/main-steps-of-an-attack.html</guid>
        
        <category>Penetration test</category>
        
        <category>Information gathering</category>
        
        <category>Vulnerability analysis</category>
        
        <category>Exploitation</category>
        
        <category>Post-exploitation</category>
        
        
      </item>
    
      <item>
        <title>Introduction</title>
        <description>&lt;p&gt;The title of this blog is pretty self-explanatory: “Spread Security”, in other words, share knowledge to increase awareness.&lt;/p&gt;

&lt;p&gt;The reason why I started this project is because Information Security is a very interesting argument which is getting more and more critical as time goes by due to the growing presence of devices on the Internet.&lt;/p&gt;

&lt;p&gt;In this scenario it is important to understand what type of attacks are in the wild and how to secure our devices, i.e. our data, from malicious users trying to steal personal informations such as credentials and documents.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://spreadsecurity.github.io/images/cybersecurity.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Theory is fundamental in every discipline, but I think that to understand deeply some concepts it is a must to consider also practice.
This is why the idea here is to show theory of attacks followed by “hands-on” demonstrations performed on a virtual laboratory environment.&lt;/p&gt;

&lt;p&gt;Here is a brief list of the main arguments (from a high level point of view) treated in this blog, so you can have an idea of what you will find in this place:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Open Source Intelligence (OSINT);&lt;/li&gt;
  &lt;li&gt;Theory behind attacks;&lt;/li&gt;
  &lt;li&gt;Practical simulations of attacks in a virtual environment;&lt;/li&gt;
  &lt;li&gt;Security best practices;&lt;/li&gt;
  &lt;li&gt;Suggestions on how to secure your systems and networks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I really hope you will find this blog useful, so enjoy the reading and see you in the next post.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Jul 2016 00:00:00 +0200</pubDate>
        <link>https://spreadsecurity.github.io//2016/07/04/introduction.html</link>
        <guid isPermaLink="true">https://spreadsecurity.github.io//2016/07/04/introduction.html</guid>
        
        <category>ICT Security</category>
        
        
      </item>
    
  </channel>
</rss>

